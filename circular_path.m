%Run this file for simulation of circular path
function gui_car_simulation

f = figure('Visible','on', 'Position', [260, 400, 1000, 600]);
hrun = uicontrol(f,...
                 'Style', 'pushbutton',...
                 'String', 'Run',...
                 'Position', [30, 10, 70, 25],...
                 'Callback', @button_callback_run);
hstop = uicontrol(f,...
                  'Style', 'pushbutton',...
                  'String', 'Stop',...
                  'Position', [115, 10, 70, 25],...
                  'Callback', @button_callback_stop);
hresume = uicontrol(f,...
                    'Style', 'pushbutton',...
                    'String', 'Resume',...
                    'Position', [195, 10, 70, 25]);
hreset = uicontrol(f,...
                   'Style', 'pushbutton',...
                   'String', 'Reset',...
                   'Position', [275, 10, 70, 25]);

htext_label_runtime = uicontrol(f,...
                          'Style', 'text',...
                          'String', 'Run time: ',...
                          'Position',[10, 470, 70, 25]);
htext_runtime = uicontrol(f,...
                          'Style', 'text',...
                          'String', '00:00',...
                          'Position', [90, 470, 70, 25]);
htext_label_distance = uicontrol(f,...
                                 'Style', 'text',...
                                 'String', 'Distance: ',...
                                 'Position', [10, 435, 70, 25]);
htext_distance = uicontrol(f,...
                           'Style', 'text', ...
                           'String', '0',...
                           'Position', [90, 435, 70, 25]);
htext_label_ratio_speed_distance = uicontrol(f,...
                                             'Style', 'text',...
                                             'String', 'Speed-Distance Ratio: ',...
                                             'Position', [10, 400, 70, 25]);
htext_ratio_speed_distance = uicontrol(f,...
                                       'Style', 'text',...
                                       'String', '0',...
                                       'Position', [90, 400, 70, 25]);
panel_allcars = uipanel(f,...
                        'Title', 'All cars',...
                        'Position',[10, 360, 320, 150]);
htext_label_velocity_allcars = uicontrol(f,...%panel_allcars,...
                                         'Style', 'text',...
                                         'String', 'Initial Velocity: ',...
                                         'Position', [10, 350, 70, 25]);
htext_velocity_allcars = uicontrol(f,...%panel_allcars,...
                                   'Style','edit',...
                                   'String','0',...
                                   'Position', [90, 350, 70, 25]);
htext_label_acceleration_allcars = uicontrol(f,...%panel_allcars,...
                                             'Style', 'text',...
                                             'String', 'Initial Acceleration: ',...
                                             'Position', [10, 315, 70, 25]);
htext_acceleration_allcars = uicontrol(f,...%panel_allcars,...
                                       'Style', 'edit',...
                                       'String','0',...
                                       'Position', [90, 315, 70, 25]);
htext_label_n_cars = uicontrol(f,...
                                       'Style', 'text',...
                                       'String', 'Number of cars: ',...
                                       'Position', [10, 280, 70, 25]);
htext_n_cars = uicontrol(f,...
                         'Style', 'edit',...
                         'String', '0',...
                         'Position', [90, 280, 70, 25],...
                         'Callback',@edit_callback_n_cars);
htext_label_shock_the_car = uicontrol(f,...
                                      'Style', 'text',...
                                      'String','Set Shock',...
                                      'Position', [10, 190, 70, 25]);
htext_label_aftertime = uicontrol(f,...
                                  'Style', 'text',...
                                  'String', 'Init shock after: ',...
                                  'Position', [10, 145, 70, 25]);
htext_aftertime = uicontrol(f,...
                            'Style', 'edit',...
                            'String','0',...
                            'Position', [90, 145, 70, 25],...
                            'Callback', @edit_callback_init_shocktime);
htext_label_shocktime = uicontrol(f,...
                            'Style', 'text',...
                            'String', 'Shock time: ',...
                            'Position', [10, 110, 70, 25]);
htext_shocktime = uicontrol(f,...
                            'Style', 'edit',...
                            'String', '0',...
                            'Position', [90, 110, 70, 25],...
                            'Callback', @edit_callback_shocktime);
htext_speed_the_car = uicontrol(f,...
                                'Style', 'text',...
                                'String', 'speed of the cars',...
                                'Position', [355, 10, 100,25]);
htext_distance_between_the_car = uicontrol(f,...
                                           'Style', 'text',...
                                           'String', 'distance between the cars',...
                                           'Position', [702.5, 10, 100,25]);
                                    
htext_distance_between_the_car = uicontrol(f,...
                                           'Style', 'text',...
                                           'String','the velocity of the blue car',...
                                           'Position', [702.5, 295, 100, 25]);
axs1 = axes('Parent', f,... 
            'Units', 'pixels',...
            'Position', [355, 335,235,235],...
            'Visible', 'on');
axis([-150 150 -150 150]);    
axs2 = axes('Parent', f,...
           'Units', 'pixels',...
           'Position', [702.5, 335, 235, 235],...
           'Visible', 'on');
axs3 = axes('Parent', f,...
            'Units', 'pixels',...
            'Position', [355, 55, 235, 235],...
            'Visible', 'on');
axs4 = axes('Parent', f,...
           'Units', 'pixels',...
           'Position', [702.5, 55, 235, 235],...
           'Visible', 'on');
%function circle
    addpath cars_class
    %initializing parameters
    r_circle = 100;
    d_circle = r_circle*2;
    r_car = 5;
    d_car = r_car*2;
    init_posx_circle = -100;
    init_posy_circle = -100;
    color_circle = 'w';
    color_car = 'r';
    dt = 0.005;
    angular_acceleration_car = 0.0007;
    space_deceleration = 20*pi*pi/9;
    min_space = abs(asin(r_car/r_circle))*2;
    %Numbers of balls
    n_cars = 25;
    time_total = 0;
    init_shocktime = 0;
    shocktime = 0;
    time_old = 0;
    init_pathangle_car = 3*pi/2;
    avg_pathangle = 2*pi/n_cars;
    avg_pathangle_converted = avg_pathangle -  asin(r_car/r_circle)*2;
    safety_time = 3;
    distance_velocity_ratio = safety_time*1000/60/60;
    avg_pathangle_distance = avg_pathangle_converted*r_circle;
    tau = 10;
    sigma = 0.001;
    velocity_car = avg_pathangle_distance/distance_velocity_ratio;
    angular_velocity_car = velocity_car*1000/60/60/r_circle;
    pos_circle = [init_posx_circle, init_posy_circle, d_circle,d_circle];
    
    %fig = figure;%('DeleteFcn', @closefigurefcn)
    the_circle = rectangle('Position', pos_circle,...
                           'Curvature', [1 1],...
                           'FaceColor', color_circle,...
                           'Parent', axs1);
    plot_speed_the_car = animatedline(axs2,'Color', [0 .7 .7]);               
        for i = 1:n_cars
            pathangle = init_pathangle_car + (i-1)*avg_pathangle;
            if i == 1
                the_cars(i) = Object_car(r_car, r_circle, pathangle, angular_velocity_car,velocity_car, angular_acceleration_car,'b', axs1);
                the_car = the_cars(i);
           
            else if i > 1
            the_cars(i) = Object_car(r_car, r_circle, pathangle, angular_velocity_car, velocity_car,angular_acceleration_car,'r',axs1);
                end
            end
        end
                       
    %initializing balls
    function button_callback_run(hObject, callbackdata)
    run = true;
    anim = timer('TimerFcn', @runanimationfcn,...
                'ExecutionMode','fixedRate',...
                'Period', dt,...
                'TasksToExecute', Inf);
    start(anim);
                                 
    end
   
    function runanimationfcn(source,event)
        for k = 1:n_cars
            if k == 1
                if time_total > init_shocktime && time_total < init_shocktime + shocktime 
                    time_old = time_total;
                    the_cars(k).velocity_car = 0;
                    disp(the_cars(k).angular_velocity_car)
                end
            end
            the_cars(k).update_position_car();
        end
        
        %graph for distance between cars
        for j = 1:n_cars
            if j == n_cars
                pathangle1 = the_cars(1).pathangle - (the_cars(j).pathangle - 2*pi) - asin(r_car/r_circle)*2;
                desired_velocity1 = pathangle1*r_circle/distance_velocity_ratio;
                y_distance_the_cars(j) = pathangle1*r_circle;
                the_cars(j).velocity_car = the_cars(j).velocity_car+ (desired_velocity1 - the_cars(j).velocity_car)*tau/(tau+pathangle1*r_circle);%+normrnd(0,pathangle1*sigma); 
            elseif j < n_cars
                pathangle2 = the_cars(j+1).pathangle - the_cars(j).pathangle - asin(r_car/r_circle)*2;
                desired_velocity2 = pathangle2*r_circle/distance_velocity_ratio;
                y_distance_the_cars(j) = pathangle2*r_circle;
                the_cars(j).velocity_car = the_cars(j).velocity_car + (desired_velocity2 - the_cars(j).velocity_car)*tau/(tau+pathangle2*r_circle);%+normrnd(0, pathangle2*sigma);
                if j == 1
                    disp(the_cars(j).angular_velocity_car);
                end
          end
           
         end     
        bar_distance_the_cars = bar(axs4,y_distance_the_cars);  
        %graph for speed of all cars
        for i = 1:n_cars
            speed_the_cars(i) = the_cars(i).velocity_car;
        end
        bar_speed_the_cars = bar(axs3, speed_the_cars);
        
        %graph for speed of the designated car
        time_total = time_total + dt;
        x_speed_the_car = time_total;
        y_speed_the_car = the_cars(1).velocity_car * r_circle;
        addpoints(plot_speed_the_car, x_speed_the_car, y_speed_the_car);
        drawnow limitrate
        
        
    end


    function edit_callback_n_cars(hObject, callbackdata)
        n_cars = str2num(hObject.Value);
    end
    
    function button_callback_stop(hObject, callbackdata)
        run = false;
        stop(anim);
        delete(anim);
    end
    function edit_callback_init_shocktime(hObject, callbackdata,handles)
        init_shocktime = str2double(get(hObject,'String'));
    end

    function edit_callback_shocktime(hObject, callbackdata,handles)
        shocktime = str2double(get(hObject, 'String'));
    end

%     function button_callback_run(hObject, callbackdata)
%         pause(getappdata(hObject.Parent, 'init_shocktime'));
%         the_cars(1).angular_velocity_car = 0;
%         pause(getappdata(hObject.Parent, 'shocktime'));
%         the_cars(1).angular_velocity_car = angular_velocity_car;
%     end
        
%     function update_car_position(source, event)
%         while run
%         t_loopstart = tic();
%         for k = 1:n_cars
%             the_cars(k).udpate_position_car();
%         end
%         el_time = toc(t_loopstart);
%         pause(dt-el_time);
%         end
%     end
        
     function closefigurefcn(source, event)
         stop(anim);
         delete(anim);
     end
end
